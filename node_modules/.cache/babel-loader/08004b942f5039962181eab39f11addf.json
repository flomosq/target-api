{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Warning: This file is auto-generated, do not modify. Instead, make your changes in 'app/javascript/active_admin/' and run `yarn build`\n */\n//= require jquery3\n//= require jquery-ui/widgets/datepicker\n//= require jquery-ui/widgets/dialog\n//= require jquery-ui/widgets/sortable\n//= require jquery-ui/widgets/tabs\n//= require jquery-ui/widget\n//= require jquery_ujs\n//= require_self\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\" && typeof module !== \"undefined\" ? factory(exports, require(\"jquery\"), require(\"jquery-ui/ui/widgets/datepicker\"), require(\"jquery-ui/ui/widgets/dialog\"), require(\"jquery-ui/ui/widgets/sortable\"), require(\"jquery-ui/ui/widgets/tabs\"), require(\"jquery-ui/ui/widget\"), require(\"jquery-ujs\")) : typeof define === \"function\" && define.amd ? define([\"exports\", \"jquery\", \"jquery-ui/ui/widgets/datepicker\", \"jquery-ui/ui/widgets/dialog\", \"jquery-ui/ui/widgets/sortable\", \"jquery-ui/ui/widgets/tabs\", \"jquery-ui/ui/widget\", \"jquery-ujs\"], factory) : (global = typeof globalThis !== \"undefined\" ? globalThis : global || self, factory(global.ActiveAdmin = {}));\n})(this, function (exports) {\n  \"use strict\";\n\n  $.fn.serializeObject = function () {\n    return this.serializeArray().reduce(function (obj, item) {\n      obj[item.name] = item.value;\n      return obj;\n    }, {});\n  };\n\n  $.ui.dialog.prototype._focusTabbable = function () {\n    this.uiDialog.focus();\n  };\n\n  function ModalDialog(message, inputs, callback) {\n    var html = '<form id=\"dialog_confirm\" title=\"' + message + '\"><ul>';\n\n    for (var name in inputs) {\n      var opts, wrapper;\n      var type = inputs[name];\n\n      if (/^(datepicker|checkbox|text|number)$/.test(type)) {\n        wrapper = \"input\";\n      } else if (type === \"textarea\") {\n        wrapper = \"textarea\";\n      } else if ($.isArray(type)) {\n        var _ref = [\"select\", type, \"\"];\n        wrapper = _ref[0];\n        opts = _ref[1];\n        type = _ref[2];\n      } else {\n        throw new Error(\"Unsupported input type: {\" + name + \": \" + type + \"}\");\n      }\n\n      var klass = type === \"datepicker\" ? type : \"\";\n      html += \"<li>\\n      <label>\" + (name.charAt(0).toUpperCase() + name.slice(1)) + \"</label>\\n      <\" + wrapper + ' name=\"' + name + '\" class=\"' + klass + '\" type=\"' + type + '\">' + (opts ? function () {\n        var result = [];\n        opts.forEach(function (v) {\n          var $elem = $(\"<option></option>\");\n\n          if ($.isArray(v)) {\n            $elem.text(v[0]).val(v[1]);\n          } else {\n            $elem.text(v);\n          }\n\n          result.push($elem.wrap(\"<div></div>\").parent().html());\n        });\n        return result;\n      }().join(\"\") : \"\") + (\"</\" + wrapper + \">\") + \"</li>\";\n      var _ref2 = [];\n      wrapper = _ref2[0];\n      opts = _ref2[1];\n      type = _ref2[2];\n      klass = _ref2[3];\n    }\n\n    html += \"</ul></form>\";\n    var form = $(html).appendTo(\"body\");\n    $(\"body\").trigger(\"modal_dialog:before_open\", [form]);\n    form.dialog({\n      modal: true,\n      open: function open(_event, _ui) {\n        $(\"body\").trigger(\"modal_dialog:after_open\", [form]);\n      },\n      dialogClass: \"active_admin_dialog\",\n      buttons: {\n        OK: function OK() {\n          callback($(this).serializeObject());\n          $(this).dialog(\"close\");\n        },\n        Cancel: function Cancel() {\n          $(this).dialog(\"close\").remove();\n        }\n      }\n    });\n  }\n\n  var onDOMReady = function onDOMReady() {\n    $(\".batch_actions_selector li a\").off(\"click confirm:complete\");\n    $(\".batch_actions_selector li a\").on(\"click\", function (event) {\n      var _this = this;\n\n      var message;\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (message = $(this).data(\"confirm\")) {\n        ModalDialog(message, $(this).data(\"inputs\"), function (inputs) {\n          $(_this).trigger(\"confirm:complete\", inputs);\n        });\n      } else {\n        $(this).trigger(\"confirm:complete\");\n      }\n    });\n    $(\".batch_actions_selector li a\").on(\"confirm:complete\", function (event, inputs) {\n      var val;\n\n      if (val = JSON.stringify(inputs)) {\n        $(\"#batch_action_inputs\").removeAttr(\"disabled\").val(val);\n      } else {\n        $(\"#batch_action_inputs\").attr(\"disabled\", \"disabled\");\n      }\n\n      $(\"#batch_action\").val($(this).data(\"action\"));\n      $(\"#collection_selection\").submit();\n    });\n\n    if ($(\".batch_actions_selector\").length && $(\":checkbox.toggle_all\").length) {\n      if ($(\".paginated_collection table.index_table\").length) {\n        $(\".paginated_collection table.index_table\").tableCheckboxToggler();\n      } else {\n        $(\".paginated_collection\").checkboxToggler();\n      }\n\n      $(document).on(\"change\", \".paginated_collection :checkbox\", function () {\n        if ($(\".paginated_collection :checkbox:checked\").length && $(\".dropdown_menu_list\").children().length) {\n          $(\".batch_actions_selector\").each(function () {\n            $(this).aaDropdownMenu(\"enable\");\n          });\n        } else {\n          $(\".batch_actions_selector\").each(function () {\n            $(this).aaDropdownMenu(\"disable\");\n          });\n        }\n      });\n    }\n  };\n\n  $(document).ready(onDOMReady).on(\"page:load turbolinks:load\", onDOMReady);\n\n  var CheckboxToggler = function () {\n    function CheckboxToggler(options, container) {\n      this.options = options;\n      this.container = container;\n\n      this._init();\n\n      this._bind();\n    }\n\n    var _proto = CheckboxToggler.prototype;\n\n    _proto.option = function option(_key, _value) {};\n\n    _proto._init = function _init() {\n      if (!this.container) {\n        throw new Error(\"Container element not found\");\n      } else {\n        this.$container = $(this.container);\n      }\n\n      if (!this.$container.find(\".toggle_all\").length) {\n        throw new Error('\"toggle all\" checkbox not found');\n      } else {\n        this.toggle_all_checkbox = this.$container.find(\".toggle_all\");\n      }\n\n      this.checkboxes = this.$container.find(\":checkbox\").not(this.toggle_all_checkbox);\n    };\n\n    _proto._bind = function _bind() {\n      var _this = this;\n\n      this.checkboxes.change(function (event) {\n        return _this._didChangeCheckbox(event.target);\n      });\n      this.toggle_all_checkbox.change(function () {\n        return _this._didChangeToggleAllCheckbox();\n      });\n    };\n\n    _proto._didChangeCheckbox = function _didChangeCheckbox(_checkbox) {\n      var numChecked = this.checkboxes.filter(\":checked\").length;\n      var allChecked = numChecked === this.checkboxes.length;\n      var someChecked = numChecked > 0 && numChecked < this.checkboxes.length;\n      this.toggle_all_checkbox.prop({\n        checked: allChecked,\n        indeterminate: someChecked\n      });\n    };\n\n    _proto._didChangeToggleAllCheckbox = function _didChangeToggleAllCheckbox() {\n      var setting = this.toggle_all_checkbox.prop(\"checked\");\n      this.checkboxes.prop({\n        checked: setting\n      });\n      return setting;\n    };\n\n    return CheckboxToggler;\n  }();\n\n  $.widget.bridge(\"checkboxToggler\", CheckboxToggler);\n\n  (function ($) {\n    $(document).on(\"focus\", \"input.datepicker:not(.hasDatepicker)\", function () {\n      var input = $(this);\n\n      if (input[0].type === \"date\") {\n        return;\n      }\n\n      var defaults = {\n        dateFormat: \"yy-mm-dd\"\n      };\n      var options = input.data(\"datepicker-options\");\n      input.datepicker($.extend(defaults, options));\n    });\n  })(jQuery);\n\n  var DropdownMenu = function () {\n    function DropdownMenu(options, element) {\n      this.options = options;\n      this.element = element;\n      this.$element = $(this.element);\n      var defaults = {\n        fadeInDuration: 20,\n        fadeOutDuration: 100,\n        onClickActionItemCallback: null\n      };\n      this.options = $.extend(defaults, this.options);\n      this.isOpen = false;\n      this.$menuButton = this.$element.find(\".dropdown_menu_button\");\n      this.$menuList = this.$element.find(\".dropdown_menu_list_wrapper\");\n\n      this._buildMenuList();\n\n      this._bind();\n    }\n\n    var _proto = DropdownMenu.prototype;\n\n    _proto.open = function open() {\n      this.isOpen = true;\n      this.$menuList.fadeIn(this.options.fadeInDuration);\n\n      this._position();\n\n      return this;\n    };\n\n    _proto.close = function close() {\n      this.isOpen = false;\n      this.$menuList.fadeOut(this.options.fadeOutDuration);\n      return this;\n    };\n\n    _proto.destroy = function destroy() {\n      this.$element = null;\n      return this;\n    };\n\n    _proto.isDisabled = function isDisabled() {\n      return this.$menuButton.hasClass(\"disabled\");\n    };\n\n    _proto.disable = function disable() {\n      this.$menuButton.addClass(\"disabled\");\n    };\n\n    _proto.enable = function enable() {\n      this.$menuButton.removeClass(\"disabled\");\n    };\n\n    _proto.option = function option(key, value) {\n      if ($.isPlainObject(key)) {\n        return this.options = $.extend(true, this.options, key);\n      } else if (key != null) {\n        return this.options[key];\n      } else {\n        return this.options[key] = value;\n      }\n    };\n\n    _proto._buildMenuList = function _buildMenuList() {\n      this.$nipple = $('<div class=\"dropdown_menu_nipple\"></div>');\n      this.$menuList.prepend(this.$nipple);\n      this.$menuList.hide();\n    };\n\n    _proto._bind = function _bind() {\n      var _this = this;\n\n      $(\"body\").click(function () {\n        if (_this.isOpen) {\n          _this.close();\n        }\n      });\n      this.$menuButton.click(function () {\n        if (!_this.isDisabled()) {\n          if (_this.isOpen) {\n            _this.close();\n          } else {\n            _this.open();\n          }\n        }\n\n        return false;\n      });\n    };\n\n    _proto._position = function _position() {\n      this.$menuList.css(\"top\", this.$menuButton.position().top + this.$menuButton.outerHeight() + 10);\n      var button_left = this.$menuButton.position().left;\n      var button_center = this.$menuButton.outerWidth() / 2;\n      var button_right = button_left + button_center * 2;\n      var menu_center = this.$menuList.outerWidth() / 2;\n      var nipple_center = this.$nipple.outerWidth() / 2;\n      var window_right = $(window).width();\n      var centered_menu_left = button_left + button_center - menu_center;\n      var centered_menu_right = button_left + button_center + menu_center;\n\n      if (centered_menu_left < 0) {\n        this.$menuList.css(\"left\", button_left);\n        this.$nipple.css(\"left\", button_center - nipple_center);\n      } else if (centered_menu_right > window_right) {\n        this.$menuList.css(\"right\", window_right - button_right);\n        this.$nipple.css(\"right\", button_center - nipple_center);\n      } else {\n        this.$menuList.css(\"left\", centered_menu_left);\n        this.$nipple.css(\"left\", menu_center - nipple_center);\n      }\n    };\n\n    return DropdownMenu;\n  }();\n\n  $.widget.bridge(\"aaDropdownMenu\", DropdownMenu);\n\n  var onDOMReady$1 = function onDOMReady() {\n    return $(\".dropdown_menu\").aaDropdownMenu();\n  };\n\n  $(document).ready(onDOMReady$1).on(\"page:load turbolinks:load\", onDOMReady$1);\n\n  function hasTurbolinks() {\n    return typeof Turbolinks !== \"undefined\" && Turbolinks.supported;\n  }\n\n  function turbolinksVisit(params) {\n    var path = [window.location.pathname, \"?\", toQueryString(params)].join(\"\");\n    Turbolinks.visit(path);\n  }\n\n  function queryString() {\n    return (window.location.search || \"\").replace(/^\\?/, \"\");\n  }\n\n  function queryStringToParams() {\n    var decode = function decode(value) {\n      return decodeURIComponent((value || \"\").replace(/\\+/g, \"%20\"));\n    };\n\n    return queryString().split(\"&\").map(function (pair) {\n      return pair.split(\"=\");\n    }).map(function (_ref) {\n      var key = _ref[0],\n          value = _ref[1];\n      return {\n        name: decode(key),\n        value: decode(value)\n      };\n    });\n  }\n\n  function toQueryString(params) {\n    var encode = function encode(value) {\n      return encodeURIComponent(value || \"\");\n    };\n\n    return params.map(function (_ref2) {\n      var name = _ref2.name,\n          value = _ref2.value;\n      return [encode(name), encode(value)];\n    }).map(function (pair) {\n      return pair.join(\"=\");\n    }).join(\"&\");\n  }\n\n  var Filters = function () {\n    function Filters() {}\n\n    Filters._clearForm = function _clearForm(event) {\n      var regex = /^(q\\[|q%5B|q%5b|page|utf8|commit)/;\n      var params = queryStringToParams().filter(function (_ref) {\n        var name = _ref.name;\n        return !name.match(regex);\n      });\n      event.preventDefault();\n\n      if (hasTurbolinks()) {\n        turbolinksVisit(params);\n      } else {\n        window.location.search = toQueryString(params);\n      }\n    };\n\n    Filters._disableEmptyInputFields = function _disableEmptyInputFields(event) {\n      var params = $(this).find(\":input\").filter(function (i, input) {\n        return input.value === \"\";\n      }).prop({\n        disabled: true\n      }).end().serializeArray();\n\n      if (hasTurbolinks()) {\n        event.preventDefault();\n        turbolinksVisit(params);\n      }\n    };\n\n    Filters._setSearchType = function _setSearchType() {\n      $(this).siblings(\"input\").prop({\n        name: \"q[\" + this.value + \"]\"\n      });\n    };\n\n    return Filters;\n  }();\n\n  (function ($) {\n    $(document).on(\"click\", \".clear_filters_btn\", Filters._clearForm).on(\"submit\", \".filter_form\", Filters._disableEmptyInputFields).on(\"change\", \".filter_form_field.select_and_search select\", Filters._setSearchType);\n  })(jQuery);\n\n  $(function () {\n    $(document).on(\"click\", \"a.button.has_many_remove\", function (event) {\n      event.preventDefault();\n      var parent = $(this).closest(\".has_many_container\");\n      var to_remove = $(this).closest(\"fieldset\");\n      recompute_positions(parent);\n      parent.trigger(\"has_many_remove:before\", [to_remove, parent]);\n      to_remove.remove();\n      return parent.trigger(\"has_many_remove:after\", [to_remove, parent]);\n    });\n    $(document).on(\"click\", \"a.button.has_many_add\", function (event) {\n      var before_add;\n      event.preventDefault();\n      var parent = $(this).closest(\".has_many_container\");\n      parent.trigger(before_add = $.Event(\"has_many_add:before\"), [parent]);\n\n      if (!before_add.isDefaultPrevented()) {\n        var index = parent.data(\"has_many_index\") || parent.children(\"fieldset\").length - 1;\n        parent.data({\n          has_many_index: ++index\n        });\n        var regex = new RegExp($(this).data(\"placeholder\"), \"g\");\n        var html = $(this).data(\"html\").replace(regex, index);\n        var fieldset = $(html).insertBefore(this);\n        recompute_positions(parent);\n        return parent.trigger(\"has_many_add:after\", [fieldset, parent]);\n      }\n    });\n    $(document).on(\"change\", '.has_many_container[data-sortable] :input[name$=\"[_destroy]\"]', function () {\n      recompute_positions($(this).closest(\".has_many\"));\n    });\n    init_sortable();\n    $(document).on(\"has_many_add:after\", \".has_many_container\", init_sortable);\n  });\n\n  var init_sortable = function init_sortable() {\n    var elems = $(\".has_many_container[data-sortable]:not(.ui-sortable)\");\n    elems.sortable({\n      items: \"> fieldset\",\n      handle: \"> ol > .handle\",\n      start: function start(ev, ui) {\n        ui.item.css({\n          opacity: .3\n        });\n      },\n      stop: function stop(ev, ui) {\n        ui.item.css({\n          opacity: 1\n        });\n        recompute_positions($(this));\n      }\n    });\n    elems.each(recompute_positions);\n  };\n\n  var recompute_positions = function recompute_positions(parent) {\n    parent = parent instanceof jQuery ? parent : $(this);\n    var input_name = parent.data(\"sortable\");\n    var position = parseInt(parent.data(\"sortable-start\") || 0, 10);\n    parent.children(\"fieldset\").each(function () {\n      var destroy_input = $(this).find(\"> ol > .input > :input[name$='[_destroy]']\");\n      var sortable_input = $(this).find(\"> ol > .input > :input[name$='[\" + input_name + \"]']\");\n\n      if (sortable_input.length) {\n        sortable_input.val(destroy_input.is(\":checked\") ? \"\" : position++);\n      }\n    });\n  };\n\n  var PerPage = function () {\n    function PerPage(element) {\n      this.element = element;\n    }\n\n    var _proto = PerPage.prototype;\n\n    _proto.update = function update() {\n      var params = queryStringToParams().filter(function (_ref) {\n        var name = _ref.name;\n        return name != \"per_page\" || name != \"page\";\n      });\n      params.push({\n        name: \"per_page\",\n        value: this.element.value\n      });\n\n      if (hasTurbolinks()) {\n        turbolinksVisit(params);\n      } else {\n        window.location.search = toQueryString(params);\n      }\n    };\n\n    PerPage._jQueryInterface = function _jQueryInterface(config) {\n      return this.each(function () {\n        var $this = $(this);\n        var data = $this.data(\"perPage\");\n\n        if (!data) {\n          data = new PerPage(this);\n          $this.data(\"perPage\", data);\n        }\n\n        if (config === \"update\") {\n          data[config]();\n        }\n      });\n    };\n\n    return PerPage;\n  }();\n\n  (function ($) {\n    $(document).on(\"change\", \".pagination_per_page > select\", function (_event) {\n      PerPage._jQueryInterface.call($(this), \"update\");\n    });\n    $.fn[\"perPage\"] = PerPage._jQueryInterface;\n    $.fn[\"perPage\"].Constructor = PerPage;\n  })(jQuery);\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  var TableCheckboxToggler = function (_CheckboxToggler) {\n    _inheritsLoose(TableCheckboxToggler, _CheckboxToggler);\n\n    function TableCheckboxToggler() {\n      return _CheckboxToggler.apply(this, arguments) || this;\n    }\n\n    var _proto = TableCheckboxToggler.prototype;\n\n    _proto._bind = function _bind() {\n      var _this = this;\n\n      _CheckboxToggler.prototype._bind.apply(this, arguments);\n\n      this.$container.find(\"tbody td\").click(function (event) {\n        if (event.target.type !== \"checkbox\") {\n          _this._didClickCell(event.target);\n        }\n      });\n    };\n\n    _proto._didChangeCheckbox = function _didChangeCheckbox(checkbox) {\n      _CheckboxToggler.prototype._didChangeCheckbox.apply(this, arguments);\n\n      $(checkbox).parents(\"tr\").toggleClass(\"selected\", checkbox.checked);\n    };\n\n    _proto._didChangeToggleAllCheckbox = function _didChangeToggleAllCheckbox() {\n      this.$container.find(\"tbody tr\").toggleClass(\"selected\", _CheckboxToggler.prototype._didChangeToggleAllCheckbox.apply(this, arguments));\n    };\n\n    _proto._didClickCell = function _didClickCell(cell) {\n      $(cell).parent(\"tr\").find(\":checkbox\").click();\n    };\n\n    return TableCheckboxToggler;\n  }(CheckboxToggler);\n\n  $.widget.bridge(\"tableCheckboxToggler\", TableCheckboxToggler);\n\n  var onDOMReady$2 = function onDOMReady() {\n    return $(\"#active_admin_content .tabs\").tabs();\n  };\n\n  $(document).ready(onDOMReady$2).on(\"page:load turbolinks:load\", onDOMReady$2);\n\n  function modal_dialog(message, inputs, callback) {\n    console.warn(\"ActiveAdmin.modal_dialog is deprecated in favor of ActiveAdmin.ModalDialog, please update usage.\");\n    return ModalDialog(message, inputs, callback);\n  }\n\n  exports.ModalDialog = ModalDialog;\n  exports.modal_dialog = modal_dialog;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n});","map":null,"metadata":{},"sourceType":"module"}