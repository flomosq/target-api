{"ast":null,"code":"/*!\n * jQuery UI Focusable 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n//>>label: :focusable Selector\n//>>group: Core\n//>>description: Selects elements which can be focused.\n//>>docs: http://api.jqueryui.com/focusable-selector/\n(function (factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"jquery\", \"./version\"], factory);\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  // Selectors\n  $.ui.focusable = function (element, hasTabindex) {\n    var map,\n        mapName,\n        img,\n        focusableIfVisible,\n        fieldset,\n        nodeName = element.nodeName.toLowerCase();\n\n    if (\"area\" === nodeName) {\n      map = element.parentNode;\n      mapName = map.name;\n\n      if (!element.href || !mapName || map.nodeName.toLowerCase() !== \"map\") {\n        return false;\n      }\n\n      img = $(\"img[usemap='#\" + mapName + \"']\");\n      return img.length > 0 && img.is(\":visible\");\n    }\n\n    if (/^(input|select|textarea|button|object)$/.test(nodeName)) {\n      focusableIfVisible = !element.disabled;\n\n      if (focusableIfVisible) {\n        // Form controls within a disabled fieldset are disabled.\n        // However, controls within the fieldset's legend do not get disabled.\n        // Since controls generally aren't placed inside legends, we skip\n        // this portion of the check.\n        fieldset = $(element).closest(\"fieldset\")[0];\n\n        if (fieldset) {\n          focusableIfVisible = !fieldset.disabled;\n        }\n      }\n    } else if (\"a\" === nodeName) {\n      focusableIfVisible = element.href || hasTabindex;\n    } else {\n      focusableIfVisible = hasTabindex;\n    }\n\n    return focusableIfVisible && $(element).is(\":visible\") && visible($(element));\n  }; // Support: IE 8 only\n  // IE 8 doesn't resolve inherit to visible/hidden for computed values\n\n\n  function visible(element) {\n    var visibility = element.css(\"visibility\");\n\n    while (visibility === \"inherit\") {\n      element = element.parent();\n      visibility = element.css(\"visibility\");\n    }\n\n    return visibility !== \"hidden\";\n  }\n\n  $.extend($.expr[\":\"], {\n    focusable: function focusable(element) {\n      return $.ui.focusable(element, $.attr(element, \"tabindex\") != null);\n    }\n  });\n  return $.ui.focusable;\n});","map":null,"metadata":{},"sourceType":"module"}